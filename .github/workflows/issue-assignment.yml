name: Issue Assignment Bot

on:
  issue_comment:
    types: [created]

jobs:
  assign_issue:
    if: github.event.issue && contains(github.event.comment.body, '/start')
    runs-on: ubuntu-latest
    
    permissions:
      issues: write
      
    steps:
      - name: Assign Issue
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;
            const commenter = context.payload.comment.user.login;
            
            // Check if issue is already assigned
            const issue = await github.rest.issues.get({
              owner,
              repo,
              issue_number
            });
            
            if (issue.data.assignees.length > 0) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: `❌ @${commenter}, this issue is already assigned to @${issue.data.assignees[0].login}. Please find another issue or wait for this one to become available.`
              });
              return;
            }
            
            // Assign the issue
            await github.rest.issues.addAssignees({
              owner,
              repo,
              issue_number,
              assignees: [commenter]
            });
            
            // Add a friendly comment
            const encouragement = [
              "🎉 You've got this!",
              "🚀 Happy coding!",
              "💪 Let's build something awesome!",
              "✨ Ready to make Lokus even better!",
              "🔥 Time to ship some code!"
            ];
            
            const randomEncouragement = encouragement[Math.floor(Math.random() * encouragement.length)];
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `🎯 **Assigned to @${commenter}!** ${randomEncouragement}
              
**Next Steps:**
1. 🍴 Fork the repository
2. 🌿 Create a feature branch: \`git checkout -b ${issue.data.title.toLowerCase().replace(/[^a-z0-9]/g, '-')}\`
3. 💻 Start coding! Check the issue description for implementation details
4. ✅ Run tests: \`npm test\`
5. 📤 Submit a PR when ready

**Need Help?**
- 💬 Comment here for questions
- 📚 Check our [Contributing Guide](https://github.com/${owner}/${repo}/blob/main/CONTRIBUTING.md)
- 🔧 Join our [Discord](https://discord.gg/lokus) for real-time help

**Stuck or changed your mind?** Comment \`/unassign\` to release this issue.

Thanks for contributing to Lokus! 🙏`
            });
            
            // Add "in progress" label if it exists
            try {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number,
                labels: ['in progress']
              });
            } catch (error) {
              // Label might not exist, ignore error
            }

  unassign_issue:
    if: github.event.issue && contains(github.event.comment.body, '/unassign')
    runs-on: ubuntu-latest
    
    permissions:
      issues: write
      
    steps:
      - name: Unassign Issue
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;
            const commenter = context.payload.comment.user.login;
            
            // Get current issue
            const issue = await github.rest.issues.get({
              owner,
              repo,
              issue_number
            });
            
            // Check if commenter is assigned
            const isAssigned = issue.data.assignees.some(assignee => assignee.login === commenter);
            
            if (!isAssigned) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: `❌ @${commenter}, you're not assigned to this issue, so you can't unassign yourself.`
              });
              return;
            }
            
            // Remove assignment
            await github.rest.issues.removeAssignees({
              owner,
              repo,
              issue_number,
              assignees: [commenter]
            });
            
            // Remove "in progress" label
            try {
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number,
                name: 'in progress'
              });
            } catch (error) {
              // Label might not exist, ignore error
            }
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `✅ @${commenter} has been unassigned from this issue. This issue is now available for others to pick up!
              
🆓 **Issue Available**: Anyone can now comment \`/start\` to claim it.`
            });