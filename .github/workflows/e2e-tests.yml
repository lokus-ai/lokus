name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux
            os: ubuntu-latest
            display: xvfb-run --auto-servernum --
          - name: macOS
            os: macos-latest
            display: ""
          - name: Windows
            os: windows-latest
            display: ""

    timeout-minutes: 60
    runs-on: ${{ matrix.platform.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libayatana-appindicator3-dev

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Create test workspace (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p /tmp/lokus-ci-workspace
          echo "# CI Test Workspace" > /tmp/lokus-ci-workspace/README.md
          echo "# Test Note" > /tmp/lokus-ci-workspace/test.md
          echo '{"nodes":[],"edges":[],"metadata":{"version":"1.0","createdWith":"CI"}}' > /tmp/lokus-ci-workspace/test.canvas

      - name: Create test workspace (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir $env:TEMP/lokus-ci-workspace
          echo "# CI Test Workspace" | Out-File -FilePath "$env:TEMP/lokus-ci-workspace/README.md" -Encoding utf8
          echo "# Test Note" | Out-File -FilePath "$env:TEMP/lokus-ci-workspace/test.md" -Encoding utf8
          echo '{"nodes":[],"edges":[],"metadata":{"version":"1.0","createdWith":"CI"}}' | Out-File -FilePath "$env:TEMP/lokus-ci-workspace/test.canvas" -Encoding utf8

      - name: Run Playwright tests (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        run: ${{ matrix.platform.display }} npx playwright test
        env:
          LOKUS_TEST_WORKSPACE: /tmp/lokus-ci-workspace
          CI: true

      - name: Run Playwright tests (macOS)
        if: matrix.platform.os == 'macos-latest'
        run: npx playwright test
        env:
          LOKUS_TEST_WORKSPACE: /tmp/lokus-ci-workspace
          CI: true

      - name: Run Playwright tests (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: npx playwright test
        env:
          LOKUS_TEST_WORKSPACE: ${{ runner.temp }}/lokus-ci-workspace
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.platform.name }}
          path: playwright-report/
          retention-days: 30
          if-no-files-found: ignore

      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.platform.name }}
          path: test-results/
          retention-days: 30
          if-no-files-found: ignore

  e2e-summary:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: E2E Test Summary
        run: |
          echo "## E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "| All Platforms | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.e2e-tests.result }}" == "failure" ]; then
            echo "| Some Platforms | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| All Platforms | ⚠️ Cancelled/Skipped |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Reports:** Available in the artifacts section" >> $GITHUB_STEP_SUMMARY
          echo "**Screenshots:** Available for failed tests in artifacts" >> $GITHUB_STEP_SUMMARY