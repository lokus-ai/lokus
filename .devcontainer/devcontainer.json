{
  "name": "Lokus Development Environment",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "NODE_VERSION": "20"
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      // Extensions to install automatically
      "extensions": [
        "rust-lang.rust-analyzer",
        "tauri-apps.tauri-vscode",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss",
        "formulahendry.auto-rename-tag",
        "ms-playwright.playwright"
      ],

      // VS Code settings
      "settings": {
        "rust-analyzer.checkOnSave.command": "clippy",
        "rust-analyzer.cargo.features": "all",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[rust]": {
          "editor.defaultFormatter": "rust-lang.rust-analyzer"
        },
        "files.watcherExclude": {
          "**/target/**": true,
          "**/node_modules/**": true
        }
      }
    }
  },

  // Forward ports for Vite dev server and Tauri
  "forwardPorts": [5173, 1420],
  "portsAttributes": {
    "5173": {
      "label": "Vite Dev Server",
      "onAutoForward": "notify"
    },
    "1420": {
      "label": "Tauri Dev Server",
      "onAutoForward": "notify"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "bash .devcontainer/post-create.sh",

  // Set the default user (non-root)
  "remoteUser": "vscode",

  // Keep container running even when VS Code is closed
  "shutdownAction": "stopContainer",

  // Mount the host's Docker socket for potential Docker-in-Docker scenarios
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Environment variables
  "containerEnv": {
    "RUST_BACKTRACE": "1",
    "CARGO_INCREMENTAL": "1"
  },

  // Features to add (optional, for additional tools)
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  }
}
